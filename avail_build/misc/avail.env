# ENV vars for avail_pipeline scripts
FUNCTION="pipeline"
PACKAGE="avail_${FUNCTION}"

# Check if Bamboo variables exist, if not exit cleanly
if [ -z $bamboo_planRepository_branchName ]
then
	if [ -z $bamboo_planName ]
	then
		echo "Bamboo variables are not set or empty, we're not running in Bamboo."
		echo "We're probably bootstrapping avail instances, exiting cleanly."
		return 0
	fi
fi

# Workaround for bad variable expansion in Bamboo
echo ">>>>> fix WORKON_HOME var evaluation"
echo "WORKON_HOME is set to : $WORKON_HOME"
export WORKON_HOME=`eval echo $WORKON_HOME`
echo "WORKON_HOME is now : $WORKON_HOME"

# Made it past Bamboo variable check, we must be in Bamboo, continuing..
echo branch name in bamboo variable bamboo_planRepository_branchName is : \"$bamboo_planRepository_branchName\"
echo

# Set branch Name
git_commit_branch=$bamboo_planRepository_branchName

# avail_repo_branch = Specify which branch to clone from avail repo when building tarball
# AVAIL_ASG_NAME = Specify which ASG to use when running kick-asg.sh, to term running instances
# git_commit_branch = Specify which branch the bamboo build is running on

case $git_commit_branch in
        feature*)
                echo "Setting op_env to dev on feature branch" 1>&2
                op_env=dev
                avail_repo_branch="develop"
                export AVAIL_ASG_NAME="availdev-Pipeline"
                ;;
        develop)
                echo "Setting op_env to dev on develop branch" 1>&2
                op_env=dev
                avail_repo_branch="develop"
                export AVAIL_ASG_NAME="availdev-Pipeline"
                ;;
        stage)
                echo "Setting op_env to stage on stage branch" 1>&2
                op_env=stage
                avail_repo_branch="stage"
                export AVAIL_ASG_NAME="availstage-Pipeline"
                export AWS_ACCESS_KEY_ID=${AWS_PROD_ACCESS_KEY_ID}
                export AWS_SECRET_ACCESS_KEY=${AWS_PROD_SECRET_ACCESS_KEY}
                ;;
        release)
                echo "Setting op_env to prod on release branch" 1>&2
                op_env=prod
                avail_repo_branch="master"
                export AVAIL_ASG_NAME="availprod-Pipeline"
                ;;
        master)
                echo "Setting op_env to prod on master branch" 1>&2
                op_env=prod
                avail_repo_branch="master"
                export AVAIL_ASG_NAME="availprod-Pipeline"
                export AWS_ACCESS_KEY_ID=${AWS_PROD_ACCESS_KEY_ID}
                export AWS_SECRET_ACCESS_KEY=${AWS_PROD_SECRET_ACCESS_KEY}
                ;;
        *)
                echo "ERROR: not on a valid branch" 1&>2
                exit 1;
esac
